{"version":3,"sources":["services/api.js","App.js","index.js"],"names":["socket","openSocket","window","location","hostname","Bar","id","UserInfo","user","points","MessageBox","text","author","className","Messages","messages","map","message","i","key","ChannelBox","name","followers","onClick","handleChannelChange","src","Channels","channels","channel","event","console","log","target","testUser","App","useState","emit","on","data","ReactDOM","render","document","getElementById"],"mappings":"iSAEMA,E,MAASC,GAAW,GAAD,OAAIC,OAAOC,SAASC,SAApB,UCEnBC,EAAM,kBACV,6BACE,wBAAIC,GAAG,OAAP,WACA,wBAAIA,GAAG,QAAP,uBAIEC,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACf,yBAAKF,GAAG,YACN,2BAAIE,EAAKC,OAAT,eACA,sCAAYD,EAAKF,MAIfI,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAQT,EAAhB,EAAgBA,SAAhB,OACf,uBAAGU,UAAU,WAAWF,EAAxB,KAAgCC,EAAhC,IAAyCT,IAGvCW,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACf,6BACGA,EAASC,KAAI,SAACC,EAASC,GAAV,OACZ,kBAAC,EAAD,CAAYC,IAAKD,EACjBP,KAAMM,EAAQN,KACdC,OAAQK,EAAQL,OAChBT,SAAUc,EAAQd,gBAMlBiB,EAAa,SAAC,GAAD,IAAEd,EAAF,EAAEA,GAAIe,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAZ,OACjB,4BAAQC,QAASC,EAAqBlB,GAAIA,EAAIO,UAAU,eACtD,6BACC,2BAAIQ,GACFC,GAEH,yBAAKhB,GAAIA,EAAIO,UAAU,gBAAgBY,IAAI,gBAIzCC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACjB,GAAGA,EACD,OACE,6BACGA,EAASX,KAAI,SAACY,EAASV,GAAV,OACZ,kBAAC,EAAD,CAAYC,IAAKD,EACjBZ,GAAIsB,EAAQtB,GACZe,KAAMO,EAAQP,KACdC,UAAWM,EAAQN,iBAQvBE,EAAsB,SAACK,GAC3BC,QAAQC,IAAIF,EAAMG,OAAO1B,KAmCrB2B,EAAW,CACfxB,OAAQ,IACRH,GAAI,IA+BS4B,EA5BH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTpB,EADS,aAEcoB,mBAAS,KAFvB,gCAGgBA,oBDnGhCnC,EAAOoC,KAAK,+BACZpC,EAAOqC,GAAG,sBAAsB,SAACC,GAC/BR,QAAQC,IAAIO,SC8FE,mBAGTX,EAHS,aAIQQ,mBAASF,IAJjB,mBAITzB,EAJS,UAMhB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKK,UAAU,OACb,yBAAKP,GAAG,iBACN,kBAAC,EAAD,CAAUE,KAAMA,IAChB,kBAAC,EAAD,CAAUmB,SAAUA,KAEtB,yBAAKrB,GAAG,iBACN,kBAAC,EAAD,CAAUS,SAAUA,QC/G9BwB,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,W","file":"static/js/main.17325475.chunk.js","sourcesContent":["import openSocket from \"socket.io-client\"\r\n\r\nconst socket = openSocket(`${window.location.hostname}:8080`);\r\n\r\nconst getChannelDisplayInfo = () => {\r\n  socket.emit('GETCHANNELSDISPLAYINFO')\r\n  socket.on('CHANNELDISPLAYINFO', (data) => {\r\n    console.log(data)\r\n  })\r\n}\r\n\r\nexport {getChannelDisplayInfo}","import React, {useState} from 'react'\nimport './App.css'\nimport {getChannelDisplayInfo} from './services/api'\n\nconst Bar = () => (\n  <div>\n    <h2 id='bar'>DeskYoo</h2>\n    <h2 id='bar2'>Better than Jodel</h2>\n  </div>\n)\n\nconst UserInfo = ({user}) => (\n  <div id='userInfo'>\n    <p>{user.points} Yoo Points</p>\n    <p>UserID: {user.id}</p>\n  </div>\n)\n\nconst MessageBox = ({text, author, location}) => (\n    <p className='message'>{text} @{author} {location}</p>\n)\n\nconst Messages = ({messages}) => (\n  <div>\n    {messages.map((message, i) =>\n      <MessageBox key={i} \n      text={message.text} \n      author={message.author}\n      location={message.location}\n      />\n    )}\n  </div>\n)\n\nconst ChannelBox = ({id, name, followers}) => (\n  <button onClick={handleChannelChange} id={id} className='channelInfo'>\n    <div>\n     <b>{name}</b>\n      {followers}\n    </div>\n    <img id={id} className='channelButton' src='arrow.png'></img>\n  </button>\n)\n\nconst Channels = ({channels}) => {\n  if(channels){\n    return(\n      <div>\n        {channels.map((channel, i) =>\n          <ChannelBox key={i}\n          id={channel.id} \n          name={channel.name} \n          followers={channel.followers}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst handleChannelChange = (event) => {\n  console.log(event.target.id)\n}\n\nconst testMessages = [{\n  text: 'DeskYoo is better than Jodel',\n  author: '1',\n  location: 'Turku'\n},\n{\n  text: 'DeskYoo is better than Jodel',\n  author: '1',\n  location: 'Turku'\n},\n{\n  text: 'DeskYoo is better than Jodel',\n  author: '1',\n  location: 'Turku'\n}]\n\nconst testChannels = [{\n  name: 'Kerttuli',\n  followers: 1000,\n  id: 1\n},\n{\n  name: 'Aalto',\n  followers: 3000,\n  id: 2\n},\n{\n  name: 'seksi',\n  followers: 69420,\n  id: 3\n}]\n\nconst testUser = {\n  points: 2000,\n  id: 69\n}\n\nconst App = () => {\n  const [messages, setMessages] = useState([])\n  const [threads, setThreads] = useState([])\n  const [channels, setChannels] = useState(getChannelDisplayInfo())\n  const [user, setUser] = useState(testUser)\n\n  return (\n    <div>\n      <Bar />\n      <div className='row'>\n        <div id='channelColumn'>\n          <UserInfo user={user} />\n          <Channels channels={channels} />\n        </div>\n        <div id='messageColumn'>\n          <Messages messages={messages} />\n        \n          {/*{messages \n          ? \n          <Messages messages={messages} />\n          : \n          <Threads threads={threads} />}*/}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}