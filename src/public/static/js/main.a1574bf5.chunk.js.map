{"version":3,"sources":["services/connect.js","services/dataApi.js","services/userApi.js","services/errorApi.js","components/boxes/Header.js","components/boxes/UserInfo.js","components/boxes/OpenedThreadBox.js","components/boxes/MessageBox.js","components/holders/Messages.js","components/boxes/ThreadBox.js","components/holders/Threads.js","components/boxes/ChannelBox.js","components/holders/Channels.js","components/boxes/OpenedChannelBox.js","components/holders/OpenedChannels.js","components/util/Notification.js","App.js","index.js"],"names":["socket","openSocket","window","location","hostname","dataHelper","getChannelDisplayInfo","cb","emit","on","data","getThreadDisplayInfo","id","console","log","getAnswersDisplayInfo","channelId","threadId","userHelper","login","user","userId","getUserDisplayInfo","errorHelper","listenError","errorText","Header","className","src","alt","width","height","UserInfo","username","score","handleOpenedThreadClick","event","cm","preventDefault","OpenedThreadBox","openedThread","colors","styles","backgroundColor","color","border","concat","textAlign","padding","borderRadius","margin","onClick","e","style","text","likes","MessageBox","Messages","messages","map","message","i","key","handleThreadClick","sm","apiHelper","length","ThreadBox","marginTop","marginLeft","marginRight","marginBottom","Threads","threads","thread","handleChannelClick","st","ChannelBox","name","followers","Channels","channels","channel","handleOpenedChannelClick","ct","OpenedChannelBox","OpenedChannels","openedChannel","Notification","notificationStyle","background","fontSize","borderStyle","App","useState","setMessages","setOpenedThread","setThreads","setOpenedChannel","setChannels","setUser","notification","setNotification","setToThreads","useEffect","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1574bf5.chunk.js","sourcesContent":["import openSocket from \"socket.io-client\"\r\n\r\nconst socket = openSocket(`${window.location.hostname}:8080`);\r\n\r\nexport default socket","import socket from './connect'\r\n\r\n//DATA GETTERS\r\n\r\nconst getChannelDisplayInfo = (cb) => {\r\n  socket.emit('GETCHANNELSDISPLAYINFO')\r\n  socket.on('CHANNELDISPLAYINFO', data => {\r\n    cb(data)\r\n  })\r\n}\r\n\r\nconst getThreadDisplayInfo = (id, cb) => {\r\n  socket.emit('GETTHREADSDISPLAYINFO', id)\r\n  socket.on('THREADSDISPLAYINFO', data => {\r\n    console.log(data)\r\n    cb(data)\r\n  })\r\n}\r\n\r\nconst getAnswersDisplayInfo = (channelId, threadId, cb) => {\r\n  socket.emit('GETANSWERSDISPLAYINFO', [channelId, threadId])\r\n  socket.on('ANSWERSDISPLAYINFO', data => {\r\n    console.log(data)\r\n    cb(data)\r\n  })\r\n}\r\n\r\nconst dataHelper = {\r\n  getChannelDisplayInfo,\r\n  getThreadDisplayInfo,\r\n  getAnswersDisplayInfo\r\n}\r\n\r\nexport default dataHelper","import socket from './connect'\r\n\r\n//LOGIN\r\n\r\nconst login = (user, cb) => {\r\n  socket.emit('LOGIN', user)\r\n  socket.on('LOGINSUCCESS', userId => {\r\n    cb(userId)\r\n  })\r\n}\r\n\r\nconst getUserDisplayInfo = (cb) => {\r\n  socket.emit('GETUSERDISPLAYINFO')\r\n  socket.on('USERDISPLAYINFO', data => {\r\n    console.log(data)\r\n    cb(data)\r\n  })\r\n}\r\n\r\nconst userHelper = {\r\n    login,\r\n    getUserDisplayInfo\r\n}\r\n\r\nexport default userHelper","import socket from './connect'\r\n\r\nconst listenError = (cb) => {\r\n    socket.on('USERERROR', errorText => {\r\n      cb(errorText)\r\n    })\r\n  }\r\n\r\nconst errorHelper = {\r\n    listenError\r\n}\r\n\r\nexport default errorHelper","import React from 'react'\r\n\r\nconst Header = () => (\r\n    <div className=\"greenBox\" id=\"Header\">\r\n      <img src=\"https://raw.githubusercontent.com/UisDangerouz/DeskYoo/master/logo.png\" alt=\"DeskYoo\" width=\"400px\" height=\"auto\"></img>\r\n    </div>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst UserInfo = ({user}) => {\r\n  if(user){\r\n    return(\r\n    <div className='yellowBox' id='UserInfo'>\r\n      <p>Username: {user.username}</p>\r\n      <p>{user.score} Yoo Points</p>\r\n    </div>\r\n    )}\r\n  else{\r\n    return(\r\n      <div className='yellowBox'>\r\n        <p>You must first log in</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserInfo","import React from 'react'\r\n\r\nconst OpenedThreadBox = ({openedThread, cm}) => {  \r\n  const colors=[\r\n    ['#e75656', ' #e70b0b'],\r\n    ['#d62f2f', ' #d67a7a'],\r\n    ['#bf1d66', ' #bf68b0'],\r\n    ['#c92e55', ' #c979a0'],\r\n    ['#de2a54', ' #de75aa']]\r\n\r\n  const bc=colors[openedThread.color][0]\r\n  const br=('2px solid').concat(colors[openedThread.color][1])\r\n\r\n\r\n  const styles = {\r\n    backgroundColor: bc,\r\n    border: br,\r\n    textAlign: 'left',\r\n    padding: '2%',\r\n    width: '90%',\r\n    borderRadius: '10px',\r\n    margin: '0%'\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <button onClick={e => handleOpenedThreadClick(e, cm)}  style={styles} className='message'>\r\n        <span> {openedThread.text} 👤</span><br></br>\r\n        <span>📍{openedThread.location}</span>\r\n      </button>\r\n      <div className=\"messageLikeContainer\">\r\n        <button className=\"likeButton\">▲</button>\r\n        <p id=\"likeText\">{openedThread.likes}</p>\r\n        <button className=\"likeButton\">▼</button>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n  \r\n  const handleOpenedThreadClick = (event, cm) => {\r\n    event.preventDefault()\r\n    cm()\r\n  }\r\n\r\nexport default OpenedThreadBox","import React from 'react'\r\n\r\nconst MessageBox = ({text, likes, location, color}) => {\r\n  const colors=[\r\n    ['#e75656', ' #e70b0b'],\r\n    ['#d62f2f', ' #d67a7a'],\r\n    ['#bf1d66', ' #bf68b0'],\r\n    ['#c92e55', ' #c979a0'],\r\n    ['#de2a54', ' #de75aa']]\r\n  \r\n  const bc=colors[color][0]\r\n  const br=('2px solid').concat(colors[color][1])\r\n  \r\n  \r\n  const styles = {\r\n    backgroundColor: bc,\r\n    border: br,\r\n  }\r\n  \r\n  return(\r\n    <div style={styles} className='yellowBox message'>\r\n        <span> {text} 👤</span><br></br>\r\n        <span>📍{location}</span>\r\n      <div className=\"messageLikeContainer2\">\r\n        <button className=\"likeButton\">▲</button>\r\n        <p id=\"likeText\">{likes}</p>\r\n        <button className=\"likeButton\">▼</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageBox","import React from 'react'\r\nimport MessageBox from '../boxes/MessageBox'\r\n\r\nconst Messages = ({messages, color}) => (\r\n    <div>\r\n      {messages.map((message, i) =>\r\n        <MessageBox key={i} \r\n        text={message.text} \r\n        likes={message.likes}\r\n        location={message.location}\r\n        color={color}\r\n        />\r\n      )}\r\n    </div>\r\n)\r\n\r\nexport default Messages","import React from 'react'\r\nimport apiHelper from '../../services/dataApi'\r\n\r\nconst ThreadBox = ({channelId, threadId, text, likes, location, color, sm}) => {\r\n  //console.log(`Color${color}`)\r\n\r\n\r\n  const colors=[\r\n    ['#e75656', ' #e70b0b'],\r\n    ['#d62f2f', ' #d67a7a'],\r\n    ['#bf1d66', ' #bf68b0'],\r\n    ['#c92e55', ' #c979a0'],\r\n    ['#de2a54', ' #de75aa']]\r\n\r\n  const bc=colors[color][0]\r\n  const br=('2px solid').concat(colors[color][1])\r\n\r\n\r\n  const styles = {\r\n    backgroundColor: bc,\r\n    border: br,\r\n    textAlign: 'left',\r\n    padding: '2%',\r\n    width: '90%',\r\n    borderRadius: '10px',\r\n    marginTop: '0%',\r\n    marginLeft: '0%',\r\n    marginRight: '0%',\r\n    marginBottom: '3%'\r\n  }\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={e => handleThreadClick(e, channelId, threadId, sm)}  style={styles} className='message'>  \r\n          <span> {text} 👤</span><br></br>\r\n          <span>📍{location}</span>\r\n        </button>\r\n        <div className=\"messageLikeContainer\">\r\n          <button className=\"likeButton\">▲</button>\r\n          <p id=\"likeText\">{likes}</p>\r\n          <button className=\"likeButton\">▼</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const handleThreadClick = (event, channelId, threadId, sm) => {\r\n    event.preventDefault()\r\n    console.log(channelId)\r\n    apiHelper.getAnswersDisplayInfo(channelId, threadId, (data) => {\r\n      if(data.length!==0){\r\n        console.log(data)\r\n        data.map(message => {\r\n          message.threadId=threadId\r\n          message.channelId=channelId\r\n        })\r\n        console.log(data)\r\n        return sm(data)\r\n      }\r\n      sm([{threadId, channelId}])\r\n    })\r\n  }\r\n\r\nexport default ThreadBox","import React from 'react'\r\nimport ThreadBox from '../boxes/ThreadBox'\r\n\r\nconst Threads = ({threads, sm}) => (\r\n    <div>\r\n      {threads.map((thread, i) =>\r\n        <ThreadBox key={i}\r\n        channelId={thread.channelId}\r\n        threadId={i} \r\n        text={thread.text} \r\n        likes={thread.likes}\r\n        location={thread.location}\r\n        color={thread.color}\r\n        sm={sm}\r\n        />\r\n      )}\r\n    </div>\r\n    )\r\n\r\nexport default Threads","import React from 'react'\r\nimport apiHelper from '../../services/dataApi'\r\n\r\nconst ChannelBox = ({id, name, followers, st}) => (\r\n    <button onClick={e => handleChannelClick(e, id, st)} className='greenBox channelInfo'>\r\n       #<b>{name}</b><br></br>\r\n       <span>{followers} 👤</span> \r\n    </button>\r\n  )\r\n  \r\n  const handleChannelClick = (event, id, st) => {\r\n    event.preventDefault()\r\n    console.log(id)\r\n    apiHelper.getThreadDisplayInfo(id, (data) => {\r\n      if(data.length!==0){\r\n        console.log(data)\r\n        data.map(thread => {\r\n          thread.channelId=id\r\n        })\r\n        console.log(data)\r\n        return st(data)\r\n      }\r\n\r\n      st([{channelId: id}])\r\n    })\r\n  }\r\n\r\nexport default ChannelBox","import React from 'react'\r\nimport ChannelBox from '../boxes/ChannelBox'\r\n\r\nconst Channels = ({channels, st}) => {\r\n    if(channels){\r\n      return(\r\n        <div>\r\n          {channels.map((channel, i) =>\r\n            <ChannelBox key={i}\r\n            id={i} \r\n            name={channel.name} \r\n            followers={channel.followers}\r\n            st={st}\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <div>\r\n  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Channels","import React from 'react'\r\n\r\nconst OpenedChannelBox = ({id, name, followers, ct}) => (\r\n    <button onClick={e => handleOpenedChannelClick(e, id, ct)} className='redBox channelInfo'>\r\n       #<b>{name}</b><br></br>\r\n       <span>{followers} 👤</span> \r\n    </button>\r\n  )\r\n  \r\n  const handleOpenedChannelClick = (event, id, ct) => {\r\n    event.preventDefault()\r\n    console.log(id)\r\n    ct()\r\n  }\r\n\r\nexport default OpenedChannelBox","import React from 'react'\r\nimport ChannelBox from '../boxes/ChannelBox'\r\nimport OpenedChannelBox from '../boxes/OpenedChannelBox'\r\n\r\nconst OpenedChannels = ({channels, st, ct, openedChannel}) => {\r\n    if(channels){\r\n      return(\r\n        <div>\r\n          {channels.map((channel, i) => i!==openedChannel ?\r\n            <ChannelBox key={i}\r\n            id={i} \r\n            name={channel.name} \r\n            followers={channel.followers}\r\n            st={st}\r\n            />\r\n            :\r\n            <OpenedChannelBox key={i}\r\n            id={i} \r\n            name={channel.name} \r\n            followers={channel.followers}\r\n            ct={ct}\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <div>\r\n  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default OpenedChannels","import React from 'react'\r\n\r\nconst Notification = ({message, color}) => {\r\n    const notificationStyle = {\r\n        color: color,\r\n        background: \"lightgrey\",\r\n        fontSize: \"20px\",\r\n        borderStyle: \"solid\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\",\r\n        marginBottom: \"10px\"\r\n      }\r\n    \r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={notificationStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\r\nimport './App.css'\r\nimport dataHelper from './services/dataApi'\r\nimport userHelper from './services/userApi'\r\nimport errorHelper from './services/errorApi'\r\nimport Header from './components/boxes/Header'\r\nimport UserInfo from './components/boxes/UserInfo'\r\nimport OpenedThreadBox from './components/boxes/OpenedThreadBox'\r\nimport Messages from './components/holders/Messages'\r\nimport Threads from './components/holders/Threads'\r\nimport Channels from './components/holders/Channels'\r\nimport OpenedChannels from './components/holders/OpenedChannels'\r\nimport Notification from './components/util/Notification'\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([])\r\n  const [openedThread, setOpenedThread] = useState({})\r\n  const [threads, setThreads] = useState([])\r\n  const [openedChannel, setOpenedChannel] = useState(null)\r\n  const [channels, setChannels] = useState([])\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  const [notification, setNotification] = useState({message: null, color: 'green'})\r\n\r\n  const setToThreads = (data) => {\r\n    setThreads([])\r\n    setMessages([])\r\n    setOpenedChannel(data[0].channelId)\r\n    console.log('here')\r\n    if(data[0].text){\r\n      setThreads(data)\r\n    }\r\n  }\r\n\r\n  const setToMessages = (data) => {\r\n    setMessages([])\r\n    setOpenedThread(threads[data[0].threadId])\r\n    console.log('here 2')\r\n    if(data[0].text){\r\n      setMessages(data)\r\n    }\r\n  }\r\n\r\n  const closeThreads = () => {\r\n    setThreads([])\r\n    setOpenedChannel(null)\r\n    setOpenedThread(null)\r\n    setMessages([])\r\n  }\r\n\r\n  const closeMessages = () => {\r\n    setMessages([])\r\n    setOpenedThread(null)\r\n  }\r\n\r\n  const showNotification = (message, color) =>{\r\n    setNotification({message, color})\r\n    setTimeout(() => {\r\n      setNotification({message: null, color})\r\n    }, 3000)\r\n  }\r\n\r\n  useEffect( () => {\r\n    userHelper.login(['Aapooo', '22222222', ], user => setUser(user))\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(user && !user.username){\r\n      console.log(user)\r\n      userHelper.getUserDisplayInfo(user => setUser(user))\r\n\r\n      dataHelper.getChannelDisplayInfo((data) => setChannels(data))\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    errorHelper.listenError(errorText => showNotification(errorText, 'red'))\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <br></br>\r\n      <Notification message={notification.message} color={notification.color}/>\r\n      <div className='row'>\r\n        <div id='channelColumn'>\r\n          {openedChannel!==null\r\n          ?\r\n          <div>\r\n            <UserInfo user={user} />\r\n            <OpenedChannels \r\n            channels={channels}\r\n            st={setToThreads}\r\n            ct={closeThreads}\r\n            openedChannel={openedChannel} />\r\n          </div>\r\n          :\r\n          <div>\r\n            <UserInfo user={user} />\r\n            <Channels \r\n            channels={channels}\r\n            st={setToThreads} />\r\n          </div>\r\n          }\r\n        </div>\r\n        <div id='messageColumn'>\r\n          {messages.length!==0 \r\n          ? \r\n          <div>\r\n            <OpenedThreadBox \r\n            openedThread={openedThread}\r\n            cm={closeMessages}\r\n            />\r\n            <Messages\r\n            messages={messages}\r\n            color={openedThread.color} />\r\n          </div>\r\n          : \r\n          <Threads threads={threads}\r\n          sm={setToMessages} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}